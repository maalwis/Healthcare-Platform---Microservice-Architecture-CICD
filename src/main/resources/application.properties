spring.application.name=Gateway
server.port=9090

#Eureka
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true

gateway.services.authenticationService=AuthenticationService
gateway.services.appointmentSchedulingService=AppointmentSchedulingService
gateway.services.prescriptionService=PrescriptionService
gateway.services.patientManagementService=PatientManagementService

#Zipkin
management.tracing.sampling.probability=1.0

# force Eureka to register this instance under ?localhost:<port>?
eureka.instance.hostname=localhost

# give it a clean instance ID (optional)
eureka.instance.instance-id=${spring.application.name}:${server.port}

logging.level.root=info
logging.level.org.springframework.cloud.gateway.route.RouteDefinitionLocator=INFO
logging.level.org.springframework.cloud.gateway=TRACE

# Resilience4J
resilience4j.circuitbreaker.instances.authBreaker.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.authBreaker.slidingWindowSize=10
resilience4j.circuitbreaker.instances.authBreaker.minimumNumberOfCalls=5
resilience4j.circuitbreaker.instances.authBreaker.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.authBreaker.waitDurationInOpenState=10s
resilience4j.circuitbreaker.instances.authBreaker.failureRateThreshold=50
resilience4j.circuitbreaker.instances.authBreaker.register-health-indicator=true
resilience4j.circuitbreaker.instances.authBreaker.automatic-transition-from-open-to-half-open-enabled=true
resilience4j.circuitbreaker.instances.authBreaker.sliding-window-type=count_based

# Actuator configuration
management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=health
management.endpoint.health.show-details=always


